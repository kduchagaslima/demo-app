version: '3.3'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.20.0
    deploy:
      resources:
        limits:
          cpus: '0.0002'
          memory: 50M
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    deploy:
      resources:
        limits:
          cpus: '0.0002'
          memory: 50M    
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

#  cadvisor:
#    image: gcr.io/google-containers/cadvisor:v0.34.0
#    deploy:
#      resources:
#        limits:
#          cpus: '0.0001'
#          memory: 50M    
#    container_name: cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker:/var/lib/docker:ro
#      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
#    restart: unless-stopped
#    expose:
#      - 8080
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"

  grafana:
    #image: grafana/grafana:6.7.2
    image: grafana/grafana:8.5.5
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  appjar:
    image: springio/gs-spring-boot-docker
    container_name: appjar
    ports:
      - "8080:8080"
    networks:
      - monitor-net

#  loki:
#    image: grafana/loki:2.5.0
#    container_name: loki
#    ports:
#      - "3100:3100"
#    command: -config.file=/etc/loki/local-config.yaml
#    networks:
#      - monitor-net

  promtail:
    image: grafana/promtail:2.5.0
    container_name: promtail
    volumes:
      - ./loki/var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitor-net
  pushgateway:
    image: prom/pushgateway:v1.2.0
    deploy:
      resources:
        limits:
          cpus: '0.0001'
          memory: 50M    
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: stefanprodan/caddy
    deploy:
      resources:
        limits:
          cpus: '0.0001'
          memory: 50M       
    container_name: caddy
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

#  mysql-apim:
#    image: mysql
#    container_name: mysql-apim
#    ports: 
#      - "3306:33060"
#    restart: unless-stopped
#    volumes:
#      - ./mysql-apim:/var/lib/mysql
#    environment:
#      - MYSQL_DATABASE=${METRICS_DB}
#      - MYSQL_USER=${ADMIN_USER}
#      - MYSQL_PASSWORD=${ADMIN_PASSWORD}
#      - MYSQL_ROOT_PASSWORD=${ADMIN_PASSWORD}
#    networks:
#      - monitor-net

#  api-manager:
#    image: wso2/wso2am
#    deploy:
#      resources:
#        limits:
#          cpus: '0.0005'
#          memory: 500M       
#    container_name: api-manager
#    restart: unless-stopped
#    ports:
#      - "8280:8280"
#      - "8243:8243"
#      - "9443:9443"
#    networks:
#      - monitor-net
#
#  micro-integrator:
#    image: wso2/wso2mi
#    deploy:
#      resources:
#        limits:
#          cpus: '0.0001'
#          memory: 50M       
#    container_name: micro-integrator
#    restart: unless-stopped
#    ports:
#      - "8290:8290"
#      - "8253:8253"
#      - "9164:9164"
#      - "9201:9201"
#    environment:
#      - JAVA_OPTS=-DenablePrometheusApi=true
#    networks:
#      - monitor-net